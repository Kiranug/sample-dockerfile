trigger:
  branches:
    include:
      - main  # Change based on your requirement

parameters:
  - name: environment
    displayName: "Select Environment"
    type: string
    default: "dev"
    values:
      - dev
      - qa
      - uat
      - prod

variables:
  - group: $(environment)-variables  # Retrieves environment-specific variables
  - name: ACR_NAME
    value: "kiranacrdevops"
  - name: IMAGE_NAME
    value: "myapp$(environment)"
  - name: IMAGE_TAG
    value: "$(Build.BuildId)"

stages:
  - stage: Build
    displayName: "Build and Push Docker Image"
    jobs:
      - job: Build
        displayName: "Build and Push Docker Image"
        pool:
          vmImage: "ubuntu-latest"

        steps:
          - task: Docker@2
            displayName: "Login to Azure Container Registry"
            inputs:
              command: login
              containerRegistry: "$(ACR_NAME).azurecr.io"

          - task: Docker@2
            displayName: "Build Docker Image"
            inputs:
              command: build
              dockerfile: Dockerfile
              repository: "$(ACR_NAME).azurecr.io/$(IMAGE_NAME)"
              tags: "$(IMAGE_TAG)"

          - task: Docker@2
            displayName: "Push Docker Image to ACR"
            inputs:
              command: push
              repository: "$(ACR_NAME).azurecr.io/$(IMAGE_NAME)"
              tags: "$(IMAGE_TAG)"

  - stage: Deploy
    displayName: "Deploy to $(environment)"
    jobs:
      - job: Deploy
        displayName: "Deploy to AKS"
        pool:
          vmImage: "ubuntu-latest"

        steps:
          - task: AzureCLI@2
            displayName: "Login to Azure"
            inputs:
              azureSubscription: "$(AZURE_SUBSCRIPTION)"
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az aks get-credentials --resource-group $(AKS_RG) --name $(AKS_CLUSTER)

          - task: KubernetesManifest@1
            displayName: "Deploy to AKS"
            inputs:
              action: "deploy"
              kubernetesServiceConnection: "$(K8S_SERVICE_CONNECTION)"
              manifests: |
                manifests/deployment.yaml
              containers: "$(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(IMAGE_TAG)"
              imagePullSecrets: "acrpullapp1"
