trigger: none
parameters:
  - name: environment
    displayName: "Select Environment"
    type: string
    default: "dev"
    values:
      - dev
      - qa
      - uat
      - prod

variables:
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  APP_NAME: '$(Build.Repository.Name)' # App name same as repo name
  manifestsPath: '$(Build.SourcesDirectory)/manifests/'
  IMAGE_REPOSITORY: '$(Build.Repository.Name)'

stages:
- stage: BuildAndPush
  displayName: Build and Push Docker Image
  jobs:
  - job: Build
    displayName: Build and Push Docker Image to ACR
    pool: default
    steps:
    - task: Docker@2
      displayName: Build and Push Docker Image
      inputs:
        command: buildAndPush
        repository: $(CONTAINER_REGISTRY)/$(IMAGE_REPOSITORY)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Kubernetes Manifests'
      inputs:
        PathtoPublish: '$(manifestsPath)'
        ArtifactName: 'kube-manifest'
        publishLocation: 'Container'

- stage: DeployToAKS
  displayName: Deploy to AKS (${{ parameters.environment }})
  dependsOn: BuildAndPush
  jobs:
  - job: Deploy
    displayName: Deploy to AKS using Kubernetes Manifests
    pool: default
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Kubernetes Manifests'
      inputs:
        artifactName: 'kube-manifest'
        downloadPath: '$(Build.SourcesDirectory)/manifests/'

    # Debugging: Output the environment and variables
    - script: |
        echo "Environment: ${{ parameters.environment }}"
        echo "APP_NAME: $(APP_NAME)"
        echo "IMAGE_REPOSITORY: $(IMAGE_REPOSITORY)"
        echo "Tag: $(tag)"
        echo "Namespace: ${{ parameters.environment }}"
        echo "Manifest Path: $(Build.SourcesDirectory)/manifests/deployment.yaml"
      displayName: 'Debug Variables'

    # Debugging: Print the content of the Kubernetes manifest file
    - script: |
        echo "Kubernetes Manifest File Content:"
        cat $(Build.SourcesDirectory)/manifests/deployment.yaml
      displayName: 'Show Manifest File'

    - task: KubernetesManifest@1
      displayName: Deploy to AKS
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: $(K8S_SERVICE_CONNECTION)
        namespace: "${{ parameters.environment }}"
        manifests: |
          $(Build.SourcesDirectory)/manifests/deployment.yaml
        imagePullSecrets: 'acrpull'
        overrides: |
          spec:
            template:
              spec:
                containers:
                - name: $(APP_NAME)
                  image: "$(CONTAINER_REGISTRY)/$(IMAGE_REPOSITORY):$(tag)"
                  env:
                  - name: APP_ENV
                    value: "${{ parameters.environment }}"
